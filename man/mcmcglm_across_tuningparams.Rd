% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slice_utilities.R
\name{mcmcglm_across_tuningparams}
\alias{mcmcglm_across_tuningparams}
\title{Get list of mcmcglms run across values of slice sampling tuning parameters}
\usage{
mcmcglm_across_tuningparams(
  ...,
  tuning_parameter_name = "w",
  formula,
  family,
  data,
  beta_prior = distributional::dist_normal(0, 1),
  log_likelihood_extra_args = list(sd = 1),
  sample_method = c("slice_sampling", "normal-normal"),
  qslice_fun = qslice::slice_stepping_out,
  n_samples = 500,
  burnin = 100
)
}
\arguments{
\item{...}{A \code{list} or \code{vector}  with values of the tuning parameter}

\item{tuning_parameter_name}{The name of the tuning parameter. Fx. for the default \code{qslice_fun}
\link[qslice:slice_stepping_out]{qslice::slice_stepping_out}, the tuning parameter is called w}

\item{formula}{an object of class "\link{formula}" (or one that can be coerced to that class): a symbolic
description of the model to be fitted. See more details at \link[stats:glm]{stats::glm}}

\item{family}{a description of the error distribution and link function to be used in the model.
This can be a \code{character} string naming a family function, a family function or the result
of a call to a family function. (See \link{family} for details of family functions.)}

\item{data}{an optional \verb{data frame}, \code{list} or \code{environment} (or object coercible by \link{as.data.frame} to a
data frame) containing the variables in the model. If not found in data, the variables are taken
from \code{environment(formula)}, typically the environment from which the function is called.}

\item{beta_prior}{a \code{distribution} object created by a function from the
\code{\link{distributional}} package. Could fx. be \code{distributional::dist_normal(mean = 0, sd = 1)}.}

\item{log_likelihood_extra_args}{a named \code{list} with arguments passed onto the \link{log_density} function.
Fx. specification of \code{log_likelihood_extra_args = list(sd = x)} is needed for the case of
\code{family = "gaussian"}}

\item{sample_method}{a \code{character} specifying the method used for sampling. The default \code{"slice_sampling"}
is the intended value in most cases, as it works for any specification of \code{family} and \code{beta_prior}.
\code{"normal-normal"} uses a conditional normal distribution to sample from in case of conjugate prior with
gaussian response and \code{beta_prior}. Implemented for testing purposes but works for that niche case.}

\item{qslice_fun}{a \code{function} from the
\href{https://CRAN.R-project.org/package=qslice}{qslice} package.
Default is \link[qslice:slice_stepping_out]{qslice::slice_stepping_out} which uses the slice sampler from
\href{https://projecteuclid.org/journals/annals-of-statistics/volume-31/issue-3/Slice-sampling/10.1214/aos/1056562461.full}{Neal 2003},
but all functions are available.}

\item{n_samples}{a \code{numeric} with number of samples to draw of each parameter(/variable) in the model}

\item{burnin}{a \code{numeric} with the number of samples to be marked as "burnin". Burnin samples are not
included in the \code{beta_mean} calculation to increase finite sample performance of the LLN estimate}
}
\description{
The function simply performs an lapply over \link{mcmcglm} for the values provided of
tuning parameter values.
}
\examples{
# Create test data for different scenarios
n <- 100
x1 <- rnorm (n)
x2 <- rbinom (n, 1, .5)
b0 <- 1
b1 <- 1.5
b2 <- 2
lin_pred <- b0+b1*x1+b2*x2

#############################################
# Different families and priors

# For family "gaussian" and iid normal prior
y_norm <- rnorm(n, mean = lin_pred, sd = 1)
dat_norm <- data.frame(Y = y_norm, X1 = x1, X2 = x2)

w05_mcmcglms <- mcmcglm_across_tuningparams(
   seq(from = 0.5, by = 0.5, length.out = 9),
   tuning_parameter_name = "w",
   formula = Y ~ .,
   family = "gaussian",
   data = dat_norm,
   n_samples = 10,
   burnin = 0
)

}
